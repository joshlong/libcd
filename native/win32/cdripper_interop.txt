
#include <windows.h>
#include "CAudioCD.h" 

// define MYLIBAPI here 
#define CDRIPPER_INTEROP_API extern "C" __declspec(dllexport)

/// internally among the cpp/h the token means, 'export'
/// for the client of the dll, the header file will mean 
/// 'import' because they wont define the constant

#include "cdripper_interop.h"  

BOOL ripTrackToFile(char drive,int trackNo, LPCTSTR file)
{ 
	CAudioCD cd(drive) ;
	BOOL answer  = FALSE; 
	
	if( isOpen(drive) == TRUE){
		answer = cd.ExtractTrack( (ULONG) trackNo, file) ; 
	}
	else std::cout<<"couldnt open the drive!"<<std::endl; 
	cd.Close() ; 
	std::cout << "about to close the cd"<<std::endl; 
	return TRUE;
}

BOOL inject(char drive )  
{
	CAudioCD cd(drive) ;
	BOOL answer  = FALSE; 
	
	if( isOpen(drive) == TRUE)
		answer = cd.InjectCD(); 
	else std::cout<<"couldnt open the drive!"<<std::endl; 
	cd.Close() ; 
	return answer;
} 

BOOL isOpen(char drive) 
{
	CAudioCD cd(drive) ;
	return cd.IsOpened();
}

BOOL eject(char drive )  
{
	BOOL answer = FALSE; 
	CAudioCD cd(drive) ;
	if( isOpen(drive) == TRUE)
	 answer = cd.EjectCD(); 
	else std::cout<<"couldnt open the drive!"<<std::endl; 
	cd.Close() ; 
	return answer; 
}

int    countTracks(  char  drive)  
{   
	int answer = -1 ;
	
	CAudioCD cd(drive);

	if( isOpen(drive) == TRUE)
		answer = (int) cd.GetTrackCount(); 
	else 
		std::cout<<"couldnt open the drive!"<<std::endl; 
	
	cd.Close();

	return answer ;
 		
}
